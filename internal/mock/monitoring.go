// Code generated by MockGen. DO NOT EDIT.
// Source: /home/alexey/programming/projects/order_service/internal/domain/monitoring.go
//
// Generated by this command:
//
//	mockgen -source=/home/alexey/programming/projects/order_service/internal/domain/monitoring.go -destination=monitoring.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockHTTPMetrics is a mock of HTTPMetrics interface.
type MockHTTPMetrics struct {
	ctrl     *gomock.Controller
	recorder *MockHTTPMetricsMockRecorder
	isgomock struct{}
}

// MockHTTPMetricsMockRecorder is the mock recorder for MockHTTPMetrics.
type MockHTTPMetricsMockRecorder struct {
	mock *MockHTTPMetrics
}

// NewMockHTTPMetrics creates a new mock instance.
func NewMockHTTPMetrics(ctrl *gomock.Controller) *MockHTTPMetrics {
	mock := &MockHTTPMetrics{ctrl: ctrl}
	mock.recorder = &MockHTTPMetricsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHTTPMetrics) EXPECT() *MockHTTPMetricsMockRecorder {
	return m.recorder
}

// IncRequest mocks base method.
func (m *MockHTTPMetrics) IncRequest() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncRequest")
}

// IncRequest indicates an expected call of IncRequest.
func (mr *MockHTTPMetricsMockRecorder) IncRequest() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncRequest", reflect.TypeOf((*MockHTTPMetrics)(nil).IncRequest))
}

// ObserveRequest mocks base method.
func (m *MockHTTPMetrics) ObserveRequest(start time.Time) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ObserveRequest", start)
}

// ObserveRequest indicates an expected call of ObserveRequest.
func (mr *MockHTTPMetricsMockRecorder) ObserveRequest(start any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObserveRequest", reflect.TypeOf((*MockHTTPMetrics)(nil).ObserveRequest), start)
}
